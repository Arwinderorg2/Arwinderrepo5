{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "GitHub",
    "description": "GitHub is a web-based Git repository hosting service. It offers all of the distributed revision control and source code management (SCM) functionality of Git as well as adding its own features.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Microsoft"
    }
  },
  "host": "api.github.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/repos/{repositoryOwner}/{repositoryName}/issues": {
      "post": {
        "tags": [
          "GitHub"
        ],
        "summary": "Create an issue",
        "description": "This operation is used to create a new issue for a specific repository.",
        "operationId": "CreateIssue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "repositoryOwner",
            "in": "path",
            "description": "Name of the repository owner.",
            "required": true,
            "x-ms-summary": "Repository Owner",
            "type": "string"
          },
          {
            "name": "repositoryName",
            "in": "path",
            "description": "Name of the repository.",
            "required": true,
            "x-ms-summary": "Repository Name",
            "type": "string"
          },
          {
            "name": "issueBasicDetails",
            "in": "body",
            "description": "Details of the issue.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueBasicDetailsModel"
            },
            "x-ms-summary": "Issue"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IssueDetailsModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important"
      }
    },
    "/trigger/issueOpened": {
      "get": {
        "tags": [
          "GitHub"
        ],
        "summary": "When a new issue is opened and assigned to me",
        "description": "This operation triggers when an issue is opened and assigned to the logged in user.",
        "operationId": "IssueOpened",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssueDetailsModel"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, open a new issue in GitHub."
      }
    },
    "/trigger/issueClosed": {
      "get": {
        "tags": [
          "GitHub"
        ],
        "summary": "When an issue assigned to me is closed",
        "description": "This operation triggers when an issue assigned to the logged in user is closed.",
        "operationId": "IssueClosed",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssueDetailsModel"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, close an issue in GitHub."
      }
    },
    "/trigger/issueAssigned": {
      "get": {
        "tags": [
          "GitHub"
        ],
        "summary": "When an issue is assigned to me",
        "description": "This operation triggers when an issue is assigned to the logged in user.",
        "operationId": "IssueAssigned",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssueDetailsModel"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, assign an issue in GitHub."
      }
    }
  },
  "definitions": {
    "IssueBasicDetailsModel": {
      "description": "Properties of an issue.",
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "Summary of the issue.",
          "type": "string",
          "x-ms-summary": "Title"
        },
        "body": {
          "description": "Description of the issue.",
          "type": "string",
          "x-ms-summary": "Body"
        }
      }
    },
    "IssueDetailsModel": {
      "description": "Properties of a GitHub issue.",
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "Summary of the issue.",
          "type": "string",
          "x-ms-summary": "Title"
        },
        "body": {
          "description": "Description of the issue.",
          "type": "string",
          "x-ms-summary": "Body"
        },
        "assignee": {
          "$ref": "#/definitions/UserDetailsModel"
        },
        "number": {
          "format": "int32",
          "description": "Unique id of the issue.",
          "type": "integer",
          "x-ms-summary": "Id"
        },
        "state": {
          "description": "Status of the issue.",
          "type": "string",
          "x-ms-summary": "State"
        },
        "created_at": {
          "description": "yyyy-MM-ddTHH:mm:ss.fffZ (UTC format).",
          "type": "string",
          "x-ms-summary": "Created Date-Time"
        },
        "repository_url": {
          "description": "Web link to the repository.",
          "type": "string",
          "x-ms-summary": "Repository Url"
        }
      }
    },
    "UserDetailsModel": {
      "description": "Properties of a GitHub user.",
      "type": "object",
      "properties": {
        "login": {
          "description": "User Login.",
          "type": "string",
          "x-ms-summary": "Login"
        },
        "id": {
          "format": "int32",
          "description": "User Id.",
          "type": "integer",
          "x-ms-summary": "Id"
        },
        "node_id": {
          "description": "User Node Id.",
          "type": "string",
          "x-ms-summary": "Node Id"
        },
        "avatar_url": {
          "description": "User Avatar Url.",
          "type": "string",
          "x-ms-summary": "Avatar Url"
        },
        "gravatar_id": {
          "description": "User Gravatar Id.",
          "type": "string",
          "x-ms-summary": "Gravatar Id"
        },
        "url": {
          "description": "User Url.",
          "type": "string",
          "x-ms-summary": "Url"
        },
        "html_url": {
          "description": "User Html Url.",
          "type": "string",
          "x-ms-summary": "Html Url"
        },
        "followers_url": {
          "description": "User FollowersUrl",
          "type": "string",
          "x-ms-summary": "Followers Url"
        },
        "following_url": {
          "description": "User Following Url.",
          "type": "string",
          "x-ms-summary": "Following Url"
        },
        "gists_url": {
          "description": "User Gists Url.",
          "type": "string",
          "x-ms-summary": "Gists Url"
        },
        "starred_url": {
          "description": "User Starred Url.",
          "type": "string",
          "x-ms-summary": "Starred Url"
        },
        "subscriptions_url": {
          "description": "User Subscriptions Url.",
          "type": "string",
          "x-ms-summary": "Subscriptions Url"
        },
        "organizations_url": {
          "description": "User Organizations Url.",
          "type": "string",
          "x-ms-summary": "Organizations Url"
        },
        "repos_url": {
          "description": "User Repos Url.",
          "type": "string",
          "x-ms-summary": "Repos Url"
        },
        "events_url": {
          "description": "User Events Url.",
          "type": "string",
          "x-ms-summary": "Events Url"
        },
        "received_events_url": {
          "description": "User Received Events Url.",
          "type": "string",
          "x-ms-summary": "Received Events Url"
        },
        "type": {
          "description": "User Type.",
          "type": "string",
          "x-ms-summary": "Type"
        },
        "site_admin": {
          "description": "Is User Site Admin?",
          "type": "boolean",
          "x-ms-summary": "Site Admin"
        },
        "name": {
          "description": "User Name.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "company": {
          "description": "User Company.",
          "type": "string",
          "x-ms-summary": "Company"
        },
        "blog": {
          "description": "User Blog.",
          "type": "string",
          "x-ms-summary": "Blog"
        },
        "location": {
          "description": "User Location.",
          "type": "string",
          "x-ms-summary": "Location"
        },
        "email": {
          "description": "User Email.",
          "type": "string",
          "x-ms-summary": "Email"
        },
        "hireable": {
          "description": "User Hireable?",
          "type": "boolean",
          "x-ms-summary": "Hireable"
        },
        "bio": {
          "description": "User Bio.",
          "type": "string",
          "x-ms-summary": "Bio"
        },
        "public_repos": {
          "format": "int32",
          "description": "User Public Repos.",
          "type": "integer",
          "x-ms-summary": "Public Repos"
        },
        "public_gists": {
          "format": "int32",
          "description": "User Public Gists.",
          "type": "integer",
          "x-ms-summary": "Public Gists"
        },
        "followers": {
          "format": "int32",
          "description": "User Followers.",
          "type": "integer",
          "x-ms-summary": "Followers"
        },
        "following": {
          "format": "int32",
          "description": "User Following.",
          "type": "integer",
          "x-ms-summary": "Following"
        },
        "created_at": {
          "format": "date-time",
          "description": "User Created At.",
          "type": "string",
          "x-ms-summary": "Created At"
        },
        "updated_at": {
          "format": "date-time",
          "description": "User Updated At.",
          "type": "string",
          "x-ms-summary": "Updated At"
        }
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://github.com/"
    }
  ]
}
